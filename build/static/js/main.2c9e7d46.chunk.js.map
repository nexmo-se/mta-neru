{"version":3,"sources":["logo.svg","context/UserContext.js","api/fetchRecording.js","api/fetchCreds.js","hooks/usePublisher.js","hooks/useDevices.js","components/AudioSetting/index.js","components/VideoSetting/index.js","components/WaitingRoom/styles.js","utils/index.js","components/WaitingRoom/index.js","hooks/useSession.js","components/MuteAudioButton/styles.js","components/MuteAudioButton/index.js","components/MuteVideoButton/styles.js","components/MuteVideoButton/index.js","hooks/useSignalling.js","components/RecordButton/styles.js","components/RecordButton/index.js","components/EndCallButton/index.js","components/ToolBar/styles.js","components/ToolBar/index.js","components/Banner/styles.js","components/EntitiesList/index.js","components/Main/index.js","components/Wrapper/styles.js","components/Wrapper/index.js","components/EndCall/styles.js","components/EndCall/index.js","components/ProtectedRoute/index.js","components/Header/styles.js","components/VirtualView/styles.js","components/VirtualView/index.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","API_URL","process","render","roomName","axios","post","stopRender","id","get","stopRecording","archiveId","console","log","getCredentials","startTranslation","streamId","sessionId","streamName","specialty","usePublisher","useParams","preferences","useContext","useState","isPublishing","setIsPublishing","pubInitialised","setPubInitialised","publisherRef","useRef","publisherError","setPublisherError","connectionIdFromStream","setConnectionIdFromStreamer","setSessionId","audioInputDevices","videoInputDevices","audioOutputDevices","deviceInfo","setDeviceInfo","getDevices","useCallback","navigator","mediaDevices","enumerateDevices","warn","Promise","resolve","reject","OT","err","devices","getAudioOutputDevices","filter","d","kind","toLowerCase","useEffect","addEventListener","removeEventListener","useDevices","streamCreatedListener","React","stream","publisher","session","localStorage","getItem","name","then","data","connectionId","catch","e","streamDestroyedListener","current","initPublisher","containerId","publisherOptions","finalPublisherOptions","Object","assign","width","height","publishVideo","publishAudio","style","buttonDisplayMode","nameDisplayMode","insertMode","showControls","fitMode","on","destroyPublisher","destroy","renderId","publish","unpublish","AudioSettings","memo","hasAudio","onAudioChange","className","Switch","checked","onChange","VideoSettings","hasVideo","onVideoChange","makeStyles","theme","waitingRoomContainer","position","left","top","display","flexDirection","transform","backgroundColor","blueGrey","padding","borderRadius","waitingRoomVideoContainer","deviceContainer","margin","deviceSettings","justifyContent","alignItems","selectWidth","networkTestContainer","flex","green","color","red","containerCenter","getSourceDeviceId","inputDevices","currentSource","toReturn","i","length","label","deviceId","WaitingRoom","classes","useStyles","setPreferences","push","useHistory","defaultLocalAudio","defaultLocalVideo","localAudio","setLocalAudio","localVideo","setLocalVideo","undefined","localVideoSource","setLocalVideoSource","localAudioSource","setLocalAudioSource","localAudioOutput","setLocalAudioOutput","audioDevice","setAudioDevice","videoDevice","setVideoDevice","audioOutputDevice","setAudioOutputDevice","setSpecialty","setRoomName","userName","setUserName","isRoomNameInvalid","setIsRoomNameInvalid","isUserNameInvalid","setIsUserNameInvalid","handleAudioChange","target","handleVideoChange","handleVideoSource","videoDeviceId","value","setVideoSource","handleAudioSource","audioDeviceId","setAudioSource","handleAudioOutput","audioOutputId","handleJoinClick","setItem","onKeyDown","keyCode","currentAudioDevice","getAudioSource","currentVideoDevice","getVideoSource","track","getActiveAudioOutputDevice","currentAudioOutputDevice","defaultSettings","audioSource","videoSource","audioOutput","waitingRoomVideoPreview","form","noValidate","FormControl","fullWidth","InputLabel","Select","size","labelId","map","key","MenuItem","TextField","variant","required","autoComplete","error","autoFocus","trim","autoWidth","device","ref","Button","onClick","useSession","container","connected","setConnected","streams","setStreams","sessionRef","status","setNetworkStatus","isExperienceComposer","window","location","pathname","split","shouldSubscribeToVideo","shouldSubscribeToAudio","subscribe","options","finalOptions","subscribeToVideo","subscribeToAudio","onStreamCreated","event","prev","addStream","onStreamDestroyed","prevStream","removeStream","onSessionDisconnected","onSessionReconnecting","onConnectionDestroyed","createSession","apiKey","token","Error","initSession","eventHandlers","streamCreated","streamDestroyed","sessionReconnecting","sessionDisconnected","connectionDestoyed","connect","destroySession","disconnect","selected","MuteAudioButton","toggleAudio","title","styles","Tooltip","IconButton","edge","toolbarButtons","disabledButton","fontSize","MuteVideoButton","arrowButton","useSignalling","messages","setMessages","setArchiveId","renderedSesion","setRenderedSession","medication","setMedicationEntities","medicalConditions","setMedicalConditionsEntities","anatomyEntities","setAnatomyEntities","piiEntities","setPiiEntities","ttpEntities","setTtpEntities","signal","type","payload","JSON","parse","stringify","archiveListener","sessionRendered","sendMessage","message","medicationListener","dataJson","from","forEach","entity","Category","Text","Math","floor","Score","concepts","RxNormConcepts","medConditionListener","ICD10CMConcepts","entitiesListener","Type","attribute","Attributes","messageListener","off","activeRecordingIcon","boxShadow","animation","RecordingButton","isRecording","setRecording","setRenderId","localClasses","startRender","renderData","recording","stopRenderAndRecording","handleRecordingStop","EndCallIcon","handleEndCall","toolbarContainer","palette","toolbarBackground","main","bottom","right","paper","background","border","shadows","spacing","toolbarMobileContainer","infoButton","groupButton","activeButtons","activeButton","activeButtonIcon","ToolBar","root","wsStatus","info","action","paddingRight","networkStatusIcons","snackBarContent","EntitiesList","listOfEntities","List","ListItem","disablePadding","ListItemIcon","getIcon","Typography","getBgColor","component","gutterBottom","sx","pl","maxHeight","overflow","overflowY","bgcolor","ListItemText","primary","Collapse","in","timeout","unmountOnExit","_e","_i","Code","Description","Main","videoContainer","text","speaker","captions","setCaptions","credentials","setCredentials","setError","setHasAudio","setHasVideo","setUserId","userId","flexWrap","alignContent","Wrapper","banner","zIndex","marginTop","new__meeting","meetingInfo","minWidth","bullet","pos","marginBottom","centeredFlex","EndCall","recordings","setRecordings","fetchRecordings","Card","CardContent","CardActions","Date","createdAt","href","url","ProtectedRoute","Component","rest","computedMatch","params","props","to","header","alignSelf","VirtualView","App","preferencesValue","useMemo","ThemeProvider","createTheme","secondary","bodyBackground","black","callBackground","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c9e7d46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createContext } from 'react';\n\nexport const UserContext = createContext();\n","import axios from 'axios';\nlet API_URL = `${process.env.REACT_APP_API_URL_DEVELOPMENT}`;\nif (process.env.NODE_ENV === 'production') {\n  API_URL = `${process.env.REACT_APP_API_URL_PRODUCTION}`;\n}\nconst fetchRecordings = (sessionId) => {\n  return axios.get(`${API_URL}/archive/${sessionId}`);\n};\n\nconst startRecording = (sessionId) => {\n  console.log('Got session client side' + sessionId);\n  return axios.post(`${API_URL}/archive/start`, {\n    session_id: sessionId,\n  });\n};\n\nconst render = (roomName) => {\n  return axios.post(`${API_URL}/render`, { roomName: roomName });\n};\n\nconst stopRender = (id) => {\n  return axios.get(`${API_URL}/render/stop/${id}`);\n};\n\nconst stopRecording = (archiveId) => {\n  return axios.get(`${API_URL}/archive/stop/${archiveId}`);\n};\n\nexport { fetchRecordings, startRecording, stopRecording, render, stopRender };\n","import axios from 'axios';\n\nlet API_URL = process.env.REACT_APP_API_URL_DEVELOPMENT;\n\nconsole.log(process.env.NODE_ENV, API_URL);\n\n// let API_URL = `http://localhost:5000`;\nif (process.env.NODE_ENV === 'production') {\n  API_URL = `${process.env.REACT_APP_API_URL_PRODUCTION}`;\n}\n\nexport const getCredentials = async (roomName) => {\n  return axios.get(`${API_URL}/session/${roomName}`);\n};\nexport const getVirtualViewerCredentials = async (roomName) => {\n  return axios.get(`${API_URL}/session/${roomName}?role=virtual`);\n};\nexport const startTranslation = async (streamId, sessionId, streamName, specialty) => {\n  return axios.post(`${API_URL}/startStreaming`, {\n    streamId,\n    sessionId,\n    streamName,\n    specialty\n  });\n};\n\nexport const stopStreamer = async (sessionId, connectionId) => {\n  return axios.get(`${API_URL}/stopStreamer/${sessionId}/${connectionId}`);\n};\n\nexport const getToken = async () => {\n  return axios.get(`${API_URL}/token`);\n};\n","import React, { useCallback, useRef, useState, useContext } from 'react';\nimport OT from '@opentok/client';\n\nimport { useParams } from 'react-router';\nimport { UserContext } from '../context/UserContext';\nimport { stopRecording, stopRender } from '../api/fetchRecording';\nimport useDevices from '../hooks/useDevices';\n\nimport { startTranslation, stopStreamer } from '../api/fetchCreds';\n\nexport function usePublisher() {\n  let { roomName } = useParams();\n  const { preferences } = useContext(UserContext);\n  const [isPublishing, setIsPublishing] = useState(false);\n  const [pubInitialised, setPubInitialised] = useState(false);\n  const publisherRef = useRef();\n  const [publisherError, setPublisherError] = useState(null);\n  const [connectionIdFromStream, setConnectionIdFromStreamer] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const { deviceInfo, getDevices } = useDevices();\n\n  const streamCreatedListener = React.useCallback(\n    ({ stream }) => {\n      console.log(stream);\n      preferences.streamId = stream.id;\n      const sessionId = stream.publisher.session.id;\n      console.log(sessionId);\n      setSessionId(sessionId);\n      // setConnectionIdFromStreamer('124');\n      console.log({roomName, specialty: localStorage.getItem('specialty')})\n      startTranslation(stream.id, sessionId, stream.name, localStorage.getItem('specialty'))\n        .then((data) => {\n          console.log(data.data);\n          console.log('setting connectionId ' + data.data.connectionId);\n          setConnectionIdFromStreamer(data.data.connectionId);\n        })\n        .catch((e) => console.log(e));\n      setIsPublishing(true);\n    },\n    [preferences]\n  );\n\n  const streamDestroyedListener = useCallback(({ stream }) => {\n    console.log('destroyed publisher');\n\n    //the problem seems to be sessionid is undefined\n\n    // .then((data) => {})\n    // .catch((e) => console.log(e));\n    publisherRef.current = null;\n\n    setPubInitialised(false);\n    setIsPublishing(false);\n  }, []);\n\n  const initPublisher = useCallback(\n    (containerId, publisherOptions) => {\n      console.log('UsePublisher - initPublisher');\n      if (publisherRef.current) {\n        console.log('UsePublisher - Already initiated');\n        return;\n      }\n      if (!containerId) {\n        console.log('UsePublisher - Container not available');\n      }\n      const finalPublisherOptions = Object.assign({}, publisherOptions, {\n        width: '100%',\n        height: '100%',\n        //name: preferences.name,\n        name: localStorage.getItem('username'),\n        publishVideo: true,\n        publishAudio: true,\n        style: {\n          buttonDisplayMode: 'on',\n          nameDisplayMode: 'off',\n        },\n        insertMode: 'append',\n        showControls: true,\n        fitMode: 'contain',\n      });\n      console.log('usePublisher finalPublisherOptions', finalPublisherOptions);\n      publisherRef.current = OT.initPublisher(\n        containerId,\n        finalPublisherOptions,\n        (err) => {\n          if (err) {\n            console.log('[usePublisher]', err);\n            publisherRef.current = null;\n          }\n          console.log('Publisher Created');\n        }\n      );\n\n      publisherRef.current.on('accessAllowed', getDevices);\n\n      setPubInitialised(true);\n\n      publisherRef.current.on('streamCreated', streamCreatedListener);\n      publisherRef.current.on('streamDestroyed', streamDestroyedListener);\n      // publisherRef.current.on('destroyed', () => {\n      //   console.log('publisherRef.current Destroyed');\n      // });\n    },\n    [preferences.name, streamCreatedListener, streamDestroyedListener]\n  );\n\n  const destroyPublisher = useCallback(() => {\n    if (!publisherRef.current) {\n      return;\n    }\n    if (sessionId && connectionIdFromStream) {\n      publisherRef.current.destroy();\n    }\n    if (preferences.renderId && preferences.archiveId) {\n      stopRender(preferences.renderId).then((data) => console.log(data));\n      stopRecording(preferences.archiveId).then((data) => console.log(data));\n    }\n    publisherRef.current.on('destroyed', () => {\n      console.log('publisherRef.current Destroyed');\n    });\n  }, [\n    connectionIdFromStream,\n    preferences.archiveId,\n    preferences.renderId,\n    sessionId,\n  ]);\n\n  const publish = useCallback(\n    ({ session, containerId, publisherOptions }) => {\n      if (!publisherRef.current) {\n        initPublisher(containerId, publisherOptions);\n      }\n      if (session && publisherRef.current && !isPublishing) {\n        return new Promise((resolve, reject) => {\n          session.publish(publisherRef.current, (err) => {\n            if (err) {\n              console.log('Publisher Error', err);\n              setIsPublishing(false);\n              publisherRef.current = null;\n              setPublisherError(true);\n              reject(err);\n            }\n            console.log('Published');\n            resolve(publisherRef.current);\n          });\n        });\n      } else if (publisherRef.current) {\n        // nothing to do\n      }\n    },\n    [initPublisher, isPublishing]\n  );\n\n  const unpublish = useCallback(\n    ({ session }) => {\n      if (publisherRef.current && isPublishing) {\n        session.unpublish(publisherRef.current);\n        setIsPublishing(false);\n        publisherRef.current = null;\n      }\n    },\n    [isPublishing, publisherRef]\n  );\n\n  return {\n    publisher: publisherRef.current,\n    initPublisher,\n    destroyPublisher,\n    publish,\n    pubInitialised,\n    unpublish,\n    isPublishing,\n    publisherError,\n    deviceInfo,\n  };\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport OT from '@opentok/client';\n\nexport default function useDevices() {\n    const [deviceInfo, setDeviceInfo] = useState({\n        audioInputDevices: [],\n        videoInputDevices: [],\n        audioOutputDevices: []\n    });\n\n    const getDevices = useCallback(async () => {\n        if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\n            console.warn('enumerateDevices() not supported.');\n            return;\n        }\n        return new Promise((resolve, reject) => {\n            OT.getDevices(async (err, devices) => {\n                if (err) {\n                    reject(err);\n                }\n                let audioOutputDevices = await OT.getAudioOutputDevices();\n                // audioOutputDevices = audioOutputDevices.map((audiooutput) =>\n                //     audiooutput.deviceId === 'default'\n                //         ? { ...audiooutput, label: 'System Default' }\n                //         : audiooutput\n                // );\n                const audioInputDevices = devices.filter(\n                    (d) => d.kind.toLowerCase() === 'audioinput'\n                );\n                const videoInputDevices = devices.filter(\n                    (d) => d.kind.toLowerCase() === 'videoinput'\n                );\n\n                setDeviceInfo({\n                    audioInputDevices,\n                    videoInputDevices,\n                    audioOutputDevices\n                });\n            });\n        });\n    }, []);\n\n    useEffect(() => {\n        navigator.mediaDevices.addEventListener('devicechange', getDevices);\n\n        getDevices();\n\n        return () => {\n            navigator.mediaDevices.removeEventListener('devicechange', getDevices);\n        };\n\n    }, []);\n\n    return { deviceInfo, getDevices };\n}","import React from \"react\";\n\nimport Mic from \"@material-ui/icons/Mic\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport const AudioSettings = React.memo(\n  ({ hasAudio, onAudioChange, className }) => {\n    return (\n      <div className={className}>\n        <Mic />\n        <div>Microphone</div>\n        <Switch\n          checked={hasAudio}\n          onChange={onAudioChange}\n          name=\"AudioToggle\"\n        />\n      </div>\n    );\n  }\n);\n","import React from \"react\";\n\nimport Videocam from \"@material-ui/icons/Videocam\";\nimport Switch from \"@material-ui/core/Switch\";\n\nexport const VideoSettings = React.memo(\n  ({ hasVideo, onVideoChange, className }) => {\n    // const [enabled, setEnabled] = useState(hasAudio);\n    console.log(\"Video Setting\", hasVideo);\n    return (\n      <div className={className}>\n        <Videocam />\n        <div>Video</div>\n        <Switch\n          checked={hasVideo}\n          onChange={onVideoChange}\n          name=\"VideoToggle\"\n        />\n      </div>\n    );\n  }\n);\n","import { makeStyles } from '@material-ui/core/styles';\nimport { blueGrey, green, red } from '@material-ui/core/colors';\nexport default makeStyles((theme) => ({\n  waitingRoomContainer: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    display: 'flex',\n    flexDirection: 'column',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: blueGrey[100],\n    padding: '10px 20px',\n    borderRadius: 5,\n    width: '360px'\n  },\n  waitingRoomVideoContainer: {\n    width: '360px',\n    height: '264px'\n  },\n  deviceContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '5px 0'\n  },\n  deviceSettings: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  selectWidth: {\n    width: '200px'\n  },\n  networkTestContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '10px 5px'\n  },\n  flex: {\n    display: 'flex'\n  },\n  green: {\n    color: green[600]\n  },\n  red: {\n    color: red[600]\n  },\n  containerCenter: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '3px',\n    flexDirection: 'column'\n  }\n}));","/**\n * For both audio and video\n * \n * @param {*} inputDevices \n * @param {*} currentSource \n * @returns String toReturn\n */\n\n// const getAudioSourceDeviceId = (audioInputDevices, currentAudioSource) => {\n//   let toReturn = '';\n//   console.log('getAudioSourceDeviceId', audioInputDevices, currentAudioSource);\n//   if (!audioInputDevices || !currentAudioSource) {\n//     return toReturn;\n//   }\n//   for (let i = 0; i < audioInputDevices.length; i += 1) {\n//     if (audioInputDevices[i].label === currentAudioSource.label) {\n//       toReturn = audioInputDevices[i].deviceId;\n//       break;\n//     }\n//   }\n//   return toReturn;\n// };\n// export { getAudioSourceDeviceId };\n\nconst getSourceDeviceId = (inputDevices, currentSource) => {\n  let toReturn = '';\n  console.log('getSourceDeviceId', inputDevices, currentSource);\n  if (!inputDevices || !currentSource) {\n    return toReturn;\n  }\n  for (let i = 0; i < inputDevices.length; i += 1) {\n    if (inputDevices[i].label === currentSource.label) {\n      toReturn = inputDevices[i].deviceId;\n      break;\n    }\n  }\n  return toReturn;\n};\n\nexport { getSourceDeviceId };\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport OT from '@opentok/client';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField\n} from '@material-ui/core';\nimport { usePublisher } from '../../hooks/usePublisher';\nimport { AudioSettings } from '../AudioSetting';\nimport { VideoSettings } from '../VideoSetting';\nimport { UserContext } from '../../context/UserContext';\nimport useStyles from './styles';\nimport { getSourceDeviceId } from '../../utils';\n\nexport default function WaitingRoom() {\n  const classes = useStyles();\n  const { preferences, setPreferences } = useContext(UserContext);\n  const { push } = useHistory();\n  const defaultLocalAudio = true;\n  const defaultLocalVideo = true;\n  const [localAudio, setLocalAudio] = useState(defaultLocalAudio);\n  const [localVideo, setLocalVideo] = useState(defaultLocalVideo);\n  const [localVideoSource, setLocalVideoSource] = useState(undefined);\n  const [localAudioSource, setLocalAudioSource] = useState(undefined);\n  const [localAudioOutput, setLocalAudioOutput] = useState(undefined);\n  let [audioDevice, setAudioDevice] = useState('');\n  let [videoDevice, setVideoDevice] = useState('');\n  let [audioOutputDevice, setAudioOutputDevice] = useState('');\n  const [specialty, setSpecialty] = useState('PRIMARYCARE');\n  const [roomName, setRoomName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isRoomNameInvalid, setIsRoomNameInvalid] = useState(false);\n  const [isUserNameInvalid, setIsUserNameInvalid] = useState(false);\n  const waitingRoomVideoContainer = useRef();\n\n  const {\n    publisher,\n    initPublisher,\n    destroyPublisher,\n    deviceInfo,\n    pubInitialised\n  } = usePublisher();\n\n  const handleAudioChange = React.useCallback((e) => {\n    setLocalAudio(e.target.checked);\n  }, []);\n\n  const handleVideoChange = React.useCallback((e) => {\n    setLocalVideo(e.target.checked);\n  }, []);\n\n  const handleVideoSource = React.useCallback(\n    (e) => {\n      const videoDeviceId = e.target.value;\n      setVideoDevice(e.target.value);\n      publisher.setVideoSource(videoDeviceId);\n      setLocalVideoSource(videoDeviceId);\n    },\n    [publisher, setVideoDevice, setLocalVideoSource]\n  );\n\n  const handleAudioSource = React.useCallback(\n    (e) => {\n      const audioDeviceId = e.target.value;\n      setAudioDevice(audioDeviceId);\n      publisher.setAudioSource(audioDeviceId);\n      setLocalAudioSource(audioDeviceId);\n    },\n    [publisher, setAudioDevice, setLocalAudioSource]\n  );\n\n  const handleAudioOutput = React.useCallback(\n    (e) => {\n      const audioOutputId = e.target.value;\n      setAudioOutputDevice(audioOutputId);\n      OT.setAudioOutputDevice(audioOutputId);\n      setLocalAudioOutput(audioOutputId);\n    },\n    [setLocalAudioOutput, setAudioOutputDevice]\n  );\n\n  const validateForm = () => {\n    console.log(\"validateForm\", userName);\n    console.log(\"validateForm\", roomName);\n    if (userName === '') {\n      setIsUserNameInvalid(true);\n      return false;\n    } else if (roomName === '') {\n      setIsRoomNameInvalid(true);\n      return false;\n    }\n    return true;\n  };\n\n  const handleJoinClick = () => {\n    if (validateForm()) {\n      localStorage.setItem('username', userName);\n      localStorage.setItem('specialty', specialty);\n      push(`room/${roomName}`);\n    }\n  };\n\n  const onChangeRoomName = (e) => {\n    const roomName = e.target.value;\n    if (roomName === '' || roomName.trim() === '') {\n      // Space detected\n      setRoomName('');\n      return;\n    }\n    setIsRoomNameInvalid(false);\n    setRoomName(roomName);\n  };\n\n  const onChangeParticipantName = (e) => {\n    const userName = e.target.value;\n    if (userName === '' || userName.trim() === '') {\n      // Space detected\n      setUserName('');\n      return;\n    }\n    setIsUserNameInvalid(false);\n    setUserName(userName);\n  };\n\n  const onKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      handleJoinClick();\n    }\n  };\n\n  useEffect(() => {\n    const publisherOptions = {\n      publishAudio: defaultLocalAudio,\n      publishVideo: defaultLocalVideo\n    };\n    if (waitingRoomVideoContainer.current) {\n      initPublisher(waitingRoomVideoContainer.current.id, publisherOptions);\n    }\n  }, [initPublisher, defaultLocalAudio, defaultLocalVideo]);\n\n  useEffect(() => {\n    if (publisher) {\n      publisher.publishAudio(localAudio);\n    }\n  }, [localAudio, publisher]);\n\n  useEffect(() => {\n    if (publisher) {\n      publisher.publishVideo(localVideo);\n    }\n  }, [localVideo, publisher]);\n\n  useEffect(() => {\n    if (publisher && pubInitialised && deviceInfo) {\n        const currentAudioDevice = publisher.getAudioSource();\n        setAudioDevice(\n          getSourceDeviceId(deviceInfo.audioInputDevices, currentAudioDevice)\n        );\n\n        const currentVideoDevice = publisher.getVideoSource();\n        setVideoDevice(\n          getSourceDeviceId(deviceInfo.videoInputDevices, currentVideoDevice?.track)\n        );\n\n        OT.getActiveAudioOutputDevice().then((currentAudioOutputDevice) => {\n          setAudioOutputDevice(currentAudioOutputDevice.deviceId);\n        });\n    }\n  }, [\n    deviceInfo,\n    publisher,\n    setAudioDevice,\n    setVideoDevice,\n    setAudioOutputDevice,\n    pubInitialised\n  ]);\n\n  useEffect(() => {\n    return () => {\n      destroyPublisher();\n    };\n  }, [destroyPublisher]);\n\n  useEffect(() => {\n    setPreferences({\n      defaultSettings: {\n        publishAudio: localAudio,\n        publishVideo: localVideo,\n        audioSource: localAudioSource,\n        videoSource: localVideoSource,\n        audioOutput: localAudioOutput\n      },\n    });\n  }, [\n    localAudio,\n    localVideo,\n    setPreferences,\n    localAudioSource,\n    localVideoSource,\n    localAudioOutput\n  ]);\n\n  return (\n    <div className={classes.waitingRoomContainer}>\n      <div\n        className={classes.containerCenter}\n      >\n        <div className={classes.waitingRoomVideoPreview} >\n          <form className={classes.form} noValidate>\n            <FormControl fullWidth > \n              <InputLabel id=\"specialty-select-label\">\n              Medical Specialty\n              </InputLabel>\n              <Select\n                size=\"small\"\n                labelId=\"specialty-select-label\"\n                id=\"specialty-select\"\n                name=\"specialty\"\n                value={specialty}\n                onChange={e => setSpecialty(e.target.value)}\n              >\n                {['PRIMARYCARE', 'CARDIOLOGY', 'NEUROLOGY', 'ONCOLOGY', 'RADIOLOGY', 'UROLOGY']\n                  .map((value, key) => (\n                  <MenuItem key={key} value={value}>{value}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"dense\"\n              required\n              fullWidth\n              id=\"room-name\"\n              label=\"Room Name\"\n              name=\"roomName\"\n              autoComplete=\"Room Name\"\n              error={isRoomNameInvalid}\n              autoFocus\n              // helperText={roomName === '' ? 'Empty Field' : ' '}\n              value={roomName}\n              onChange={onChangeRoomName}\n              onKeyDown={onKeyDown}\n            />\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              margin=\"none\"\n              fullWidth\n              id=\"publisher-name\"\n              label=\"Name\"\n              name=\"name\"\n              error={isUserNameInvalid}\n              required\n              autoComplete=\"Name\"\n              // helperText={userName === '' ? 'Empty Field' : ' '}\n              value={userName}\n              onChange={onChangeParticipantName}\n              onKeyDown={onKeyDown}\n            />\n          </form>\n          <div className={classes.deviceContainer}>\n            <>\n              <FormControl margin=\"dense\">\n                <InputLabel id=\"demo-simple-select-label\">\n                  Select Audio Source\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={audioDevice}\n                  onChange={handleAudioSource}\n                  autoWidth={true}\n                >\n                  {deviceInfo.audioInputDevices.map((device) => (\n                    <MenuItem key={device.deviceId} value={device.deviceId}>\n                      {device.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <FormControl margin=\"dense\">\n                <InputLabel id=\"video\">Select Audio Output</InputLabel>\n                {deviceInfo.audioOutputDevices && (\n                  <Select\n                    labelId=\"video\"\n                    id=\"demo-simple-select\"\n                    value={audioOutputDevice}\n                    onChange={handleAudioOutput}\n                    autoWidth={true}\n                  >\n                    {deviceInfo.audioOutputDevices.map((device) => (\n                      <MenuItem key={device.deviceId} value={device.deviceId}>\n                        {device.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                )}\n              </FormControl>\n\n              <FormControl margin=\"dense\">\n                <InputLabel id=\"video\">Select Video Source</InputLabel>\n                {deviceInfo.videoInputDevices && (\n                  <Select\n                    labelId=\"video\"\n                    id=\"demo-simple-select\"\n                    value={videoDevice}\n                    onChange={handleVideoSource}\n                    autoWidth={true}\n                  >\n                    {deviceInfo.videoInputDevices.map((device) => (\n                      <MenuItem key={device.deviceId} value={device.deviceId}>\n                        {device.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                )}\n              </FormControl>\n            </>\n          </div>\n          <div className={classes.deviceContainer}>\n            <AudioSettings\n              className={classes.deviceSettings}\n              hasAudio={localAudio}\n              onAudioChange={handleAudioChange}\n            />\n            <VideoSettings\n              className={classes.deviceSettings}\n              hasVideo={localVideo}\n              onVideoChange={handleVideoChange}\n            />\n          </div>\n          <div\n            id=\"waiting-room-video-container\"\n            className={classes.waitingRoomVideoContainer} \n            ref={waitingRoomVideoContainer}\n          >\n          </div>\n        </div>\n      </div>\n      <div\n        className={classes.containerCenter}\n      >\n        <Button variant=\"contained\" color=\"secondary\" onClick={handleJoinClick}>\n          Join Call\n        </Button>\n      </div>\n    </div>\n  );\n}","import React, { useState, useRef, useCallback } from 'react';\n\nimport _ from 'lodash';\nimport OT from '@opentok/client';\n// const OT = window.OT;\n\nexport function useSession({ container }) {\n  const [connected, setConnected] = useState(false);\n  const [streams, setStreams] = useState([]);\n  const sessionRef = useRef(null);\n  const [status, setNetworkStatus] = useState(null);\n\n  const addStream = ({ stream }) => {\n    setStreams((prev) => [...prev, stream]);\n  };\n\n  const removeStream = ({ stream }) => {\n    setStreams((prev) =>\n      prev.filter((prevStream) => prevStream.id !== stream.id)\n    );\n  };\n\n  const isExperienceComposer = () => {\n    const queryString = window.location.pathname;\n    return queryString.split('/')[2] === 'virtualviewer';\n  };\n\n  const isRecorder = () => {\n    const queryString = window.location.pathname;\n    return queryString.split('/')[2] === 'recorder';\n  };\n\n  const shouldSubscribeToVideo = (name) => {\n    // if (name.split('_')[1] === 'EC') return false;\n    return name !== 'EC';\n    // if (name === 'EC') return false;\n    // else return true;\n  };\n\n  const shouldSubscribeToAudio = React.useCallback((name) => {\n    if (isExperienceComposer()) return false;\n    if (isRecorder()) return true;\n    else return true;\n  }, []);\n\n  const subscribe = React.useCallback(\n    (stream, options = {}) => {\n      console.log(stream);\n      if (sessionRef.current && container.current) {\n        const finalOptions = Object.assign({}, options, {\n          insertMode: 'append',\n          width: '100%',\n          height: '100%',\n          fitMode: 'contain',\n          style: {\n            buttonDisplayMode: 'on',\n            nameDisplayMode: 'on',\n          },\n          showControls: true,\n          subscribeToVideo: shouldSubscribeToVideo(stream.name),\n          // subscribeToAudio: shouldSubscribeToVideo(stream.name),\n          // subscribeToAudio: !isExperienceComposer(),\n          subscribeToAudio: shouldSubscribeToAudio(),\n          //   isExperienceComposer() && stream.name === 'EC' ? false : true,\n        });\n        const subscriber = sessionRef.current.subscribe(\n          stream,\n          shouldSubscribeToVideo(stream.name) ? container.current.id : null,\n          finalOptions\n        );\n      }\n    },\n    [container, shouldSubscribeToAudio]\n  );\n\n  const onStreamCreated = useCallback(\n    (event) => {\n      console.log('stream created event ' + event.stream.name);\n      console.log(\n        ' subscribe to video ' + shouldSubscribeToVideo(event.stream.name)\n      );\n      console.log('is experience composer ' + isExperienceComposer());\n\n      subscribe(event.stream);\n      addStream({ stream: event.stream });\n    },\n    [subscribe]\n  );\n\n  const onStreamDestroyed = useCallback((event) => {\n    removeStream({ stream: event.stream });\n  }, []);\n\n  const onSessionDisconnected = useCallback((event) => {\n    setNetworkStatus('disconnected');\n  }, []);\n  const onSessionReconnecting = useCallback((event) => {\n    setNetworkStatus('reconnecting');\n  }, []);\n\n  const onConnectionDestroyed = useCallback((event) => {\n    console.log(event);\n  }, []);\n\n  const createSession = useCallback(\n    ({ apiKey, sessionId, token }) => {\n      if (!apiKey) {\n        throw new Error('Missing apiKey');\n      }\n\n      if (!sessionId) {\n        throw new Error('Missing sessionId');\n      }\n\n      if (!token) {\n        throw new Error('Missing token');\n      }\n\n      sessionRef.current = OT.initSession(apiKey, sessionId, {});\n      const eventHandlers = {\n        streamCreated: onStreamCreated,\n        streamDestroyed: onStreamDestroyed,\n        sessionReconnecting: onSessionReconnecting,\n        sessionDisconnected: onSessionDisconnected,\n        connectionDestoyed: onConnectionDestroyed,\n      };\n      sessionRef.current.on(eventHandlers);\n      return new Promise((resolve, reject) => {\n        sessionRef.current.connect(token, (err) => {\n          if (!sessionRef.current) {\n            // Either this session has been disconnected or OTSession\n            // has been unmounted so don't invoke any callbacks\n            return;\n          }\n          if (err) {\n            reject(err);\n          } else if (!err) {\n            console.log('Session Connected!');\n            setConnected(true);\n            resolve(sessionRef.current);\n          }\n        });\n      });\n    },\n    [\n      onConnectionDestroyed,\n      onSessionDisconnected,\n      onSessionReconnecting,\n      onStreamCreated,\n      onStreamDestroyed,\n    ]\n  );\n\n  const destroySession = React.useCallback(() => {\n    if (sessionRef.current) {\n      sessionRef.current.on('disconnected', () => {\n        sessionRef.current = null;\n      });\n      sessionRef.current.disconnect();\n    }\n  }, []);\n\n  return {\n    session: sessionRef,\n    connected,\n    createSession,\n    destroySession,\n    streams,\n    status,\n  };\n}\n","import { makeStyles } from '@material-ui/core/styles';\n// export default makeStyles((theme)=>{\nexport default makeStyles({\n  selected: {\n    color: '#b779ff'\n  }\n});\n","// import MicIcon from '@material-ui/icons/Mic';\nimport MicIcon from '@mui/icons-material/Mic';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport React from 'react';\nimport styles from './styles.js';\n\nexport default function MuteAudioButton({\n  toggleAudio,\n  hasAudio,\n  classes,\n  handleAudioChange,\n}) {\n  const title = hasAudio ? 'Disable Microphone' : 'Enable Microphone';\n  const localClasses = styles();\n  // console.log(classes);\n\n  // const { deviceInfo } = useDevices();\n  // const [devicesAvailable, setDevicesAvailable] = React.useState(null);\n  // const [options, setOptions] = React.useState([]);\n  // const [open, setOpen] = React.useState(false);\n  // const anchorRef = React.useRef(null);\n  // const [selectedIndex, setSelectedIndex] = React.useState(0);\n  // const [audioDeviceId, setAudioDeviceId] = React.useState('');\n\n  // React.useEffect(() => {\n  //   setDevicesAvailable(deviceInfo.audioInputDevices);\n\n  //   if (cameraPublishing && devicesAvailable) {\n  //     getAudioSource().then((id) => setAudioDeviceId(id));\n\n  //     const indexOfSelectedElement = devicesAvailable.indexOf(\n  //       devicesAvailable.find((e) => e.deviceId === audioDeviceId)\n  //     );\n\n  //     setSelectedIndex(indexOfSelectedElement);\n  //   }\n  // }, [\n  //   cameraPublishing,\n  //   getAudioSource,\n  //   deviceInfo,\n  //   audioDeviceId,\n  //   devicesAvailable\n  // ]);\n\n  // React.useEffect(() => {\n  //   if (devicesAvailable) {\n  //     const audioDevicesAvailable = devicesAvailable.map((e) => {\n  //       return e.label;\n  //     });\n  //     setOptions(audioDevicesAvailable);\n  //   }\n  // }, [devicesAvailable]);\n\n  // const handleChangeAudioSource = (event, index) => {\n  //   setSelectedIndex(index);\n  //   console.log(index);\n  //   setOpen(false);\n  //   const audioDeviceId = devicesAvailable.find(\n  //     (device) => device.label === event.target.textContent\n  //   ).deviceId;\n  //   changeAudioSource(audioDeviceId);\n  // };\n\n  // const handleToggle = (e) => {\n  //   setOpen((prevOpen) => !prevOpen);\n  // };\n\n  // const handleClose = (event) => {\n  //   if (anchorRef.current && anchorRef.current.contains(event.target)) {\n  //     return;\n  //   }\n  //   setOpen(false);\n  // };\n\n  return (\n    <>\n      <Tooltip title={title} aria-label=\"add\">\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"mic\"\n          onClick={handleAudioChange}\n          className={`${classes.toolbarButtons} ${\n            !hasAudio ? classes.disabledButton : ''\n          }\n          `}\n        >\n          {!hasAudio ? (\n            <MicOffIcon fontSize=\"large\" />\n          ) : (\n            <MicIcon fontSize=\"large\" />\n          )}\n        </IconButton>\n      </Tooltip>\n    </>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles({\n  selected: {\n    color: '#b779ff',\n    backgroundColor: 'black'\n  }\n});\n","import VideoCam from '@mui/icons-material/Videocam';\nimport VideocamOff from '@mui/icons-material/VideocamOff';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n// import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport React from 'react';\nimport styles from './styles.js';\n\nexport default function MuteVideoButton({\n  classes,\n  hasVideo,\n  handleVideoChange,\n}) {\n  const title = hasVideo ? 'Disable Camera' : 'Enable Camera';\n  // console.log('[MuteVideoButton] - hasVideo', hasVideo);\n\n  const [devicesAvailable, setDevicesAvailable] = React.useState(null);\n  const [options, setOptions] = React.useState([]);\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const localClasses = styles();\n\n  // React.useEffect(() => {\n  //   setDevicesAvailable(deviceInfo.videoInputDevices);\n\n  //   if (cameraPublishing) {\n  //     const currentDeviceId = getVideoSource()?.deviceId;\n\n  //     const IndexOfSelectedElement = devicesAvailable.indexOf(\n  //       devicesAvailable.find((e) => e.deviceId === currentDeviceId)\n  //     );\n  //     setSelectedIndex(IndexOfSelectedElement);\n  //   }\n  // }, [cameraPublishing, getVideoSource, deviceInfo]);\n\n  // React.useEffect(() => {\n  //   if (devicesAvailable) {\n  //     const videoDevicesAvailable = devicesAvailable.map((e) => {\n  //       return e.label;\n  //     });\n  //     setOptions(videoDevicesAvailable);\n  //   }\n  // }, [devicesAvailable]);\n\n  // const handleChangeVideoSource = (event, index) => {\n  //   setSelectedIndex(index);\n  //   setOpen(false);\n  //   const videoDeviceId = devicesAvailable.find(\n  //     (device) => device.label === event.target.textContent\n  //   ).deviceId;\n  //   changeVideoSource(videoDeviceId);\n  // };\n\n  // const handleToggle = (e) => {\n  //   setOpen((prevOpen) => !prevOpen);\n  // };\n\n  // const handleClose = (event) => {\n  //   if (anchorRef.current && anchorRef.current.contains(event.target)) {\n  //     return;\n  //   }\n  //   setOpen(false);\n  // };\n\n  return (\n    <>\n      <Tooltip title={title} aria-label=\"add\">\n        <IconButton\n          onClick={handleVideoChange}\n          edge=\"start\"\n          aria-label=\"videoCamera\"\n          size=\"small\"\n          className={`${classes.arrowButton} ${\n            !hasVideo ? classes.disabledButton : ''\n          }`}\n        >\n          {!hasVideo ? (\n            <VideocamOff fontSize=\"large\" />\n          ) : (\n            <VideoCam fontSize=\"large\" />\n          )}\n        </IconButton>\n      </Tooltip>\n    </>\n  );\n}\n","import { useState, useCallback, useEffect, useContext } from 'react';\n// import { Message } from '../entities/ChatMessage';\n// import { UserContext } from '../context/UserContext';\nimport { v4 as uuid } from 'uuid';\n\nexport function useSignalling({ session }) {\n  const [messages, setMessages] = useState(null);\n  const [entities, setEntities] = useState(null);\n  const [archiveId, setArchiveId] = useState(null);\n  const [renderedSesion, setRenderedSession] = useState(null);\n  const [medication, setMedicationEntities] = useState([]);\n  const [medicalConditions, setMedicalConditionsEntities] = useState([]);\n  const [anatomyEntities, setAnatomyEntities] = useState([]);\n  const [piiEntities, setPiiEntities] = useState([]);\n  const [ttpEntities, setTtpEntities] = useState([]);\n  //   const { user } = useContext(UserContext);\n\n  const signal = useCallback(\n    async ({ type, data }) => {\n      return new Promise((resolve, reject) => {\n        const payload = JSON.parse(JSON.stringify({ type, data }));\n        if (session) {\n          session.signal(payload, (err) => {\n            if (err) reject(err);\n            else resolve();\n          });\n        }\n      });\n    },\n    [session]\n  );\n\n  const archiveListener = useCallback(({ data }) => {\n    console.log(data);\n    const archiveId = data.split(':')[0];\n    const sessionRendered = data.split(':')[1];\n    setArchiveId(archiveId);\n    setRenderedSession(sessionRendered);\n  }, []);\n\n  const sendMessage = useCallback(\n    (message) => {\n      return signal({ type: 'message', data: message });\n    },\n    [signal]\n  );\n\n  // useEffect(() => {\n  //   if (medicalConditions) console.log(medicalConditions);\n  //   if (medication) console.log(medication);\n  // }, [medicalContitions, medication]);\n\n  const medicationListener = useCallback(({ data, from }) => {\n    const dataJson = JSON.parse(data);\n    // const medString = `${dataJson[0].Description} | ${dataJson[0].Code}`;\n    // setMedicationEntities((prev) => [...prev, medString]);\n    //console.log(dataJson)\n    if (dataJson.length) {\n      dataJson.forEach((entity) => {\n        if (entity?.Category === 'MEDICATION') {\n          setMedicationEntities((prev) => [{\n            Text: `${entity.Text} | ${ Math.floor(entity.Score * 10000)/100 }%`, \n            concepts: entity.RxNormConcepts? entity.RxNormConcepts : []\n          }, ...prev]);\n        }\n      })\n    }\n  }, []);\n\n  const medConditionListener = useCallback(({ data, from }) => {\n    const dataJson = JSON.parse(data);\n    // const medString = `${dataJson[0].Description} | ${dataJson[0].Code}`;\n    // setMedicalConditionsEntities((prev) => [...prev, medString]);\n    if (dataJson.length) {\n      dataJson.forEach((entity) => {\n        if (entity?.Category === 'MEDICAL_CONDITION') {\n          setMedicalConditionsEntities((prev) => [{\n            Text: `${entity.Text} | ${ Math.floor(entity.Score * 10000)/100 }%`, \n            concepts: entity.ICD10CMConcepts? entity.ICD10CMConcepts : []\n          }, ...prev]);\n        }\n      })\n    }\n  }, []);\n\n  const entitiesListener = useCallback(({ data, from }) => {\n    const dataJson = JSON.parse(data);\n    if (dataJson.length) {\n      dataJson.forEach((entity) => {\n        if (entity?.Category === 'ANATOMY')\n          setAnatomyEntities((prev) => [{\n            Text: `${entity.Type} | ${entity.Text}`, \n          }, ...prev]);\n\n        if (entity?.Category === 'PROTECTED_HEALTH_INFORMATION')\n          setPiiEntities((prev) => [{\n            Text: `${entity.Type} | ${entity.Text}`,\n          }, ...prev]);\n\n        if (entity?.Category === 'TEST_TREATMENT_PROCEDURE') {\n          var attribute = entity.Attributes && entity.Attributes[0]? ' | ' + entity.Attributes[0].Text : '';\n          setTtpEntities((prev) => [{\n            Text: entity.Text + attribute, \n          }, ...prev]);\n        }\n      });\n    }\n  }, []);\n\n  const messageListener = useCallback(({ data, from }) => {\n    console.log('received message');\n    console.log(JSON.stringify(data));\n    setMessages(data);\n  }, []);\n\n  useEffect(() => {\n    if (session) {\n      session.on('signal:captions', messageListener);\n      session.on('signal:medicalEntities', entitiesListener);\n      session.on('signal:archiveStarted', archiveListener);\n      session.on('signal:medication', medicationListener);\n      session.on('signal:medCondition', medConditionListener);\n    }\n    return function cleanup() {\n      if (session) {\n        session.off('signal:captions', messageListener);\n        session.off('signal:archiveStarted', archiveListener);\n        session.off('signal:medicalEntities', entitiesListener);\n        session.off('signal:medication', medicationListener);\n        session.off('signal:medCondition', medicationListener);\n      }\n    };\n  }, [\n    session,\n    messageListener,\n    archiveListener,\n    entitiesListener,\n    medicationListener,\n    medConditionListener,\n  ]);\n\n  return {\n    sendMessage,\n    messages,\n    archiveId,\n    renderedSesion,\n    medicalConditions,\n    medication,\n    piiEntities,\n    anatomyEntities,\n    ttpEntities,\n  };\n}\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles((theme) => ({\n  activeRecordingIcon: {\n    boxShadow: '0 0 0 0 rgba(213, 15, 45, 1)',\n    animation: 'pulse-red 2s infinite',\n    borderRadius: '100%',\n  },\n}));\n","import { useState, useContext } from 'react';\nimport {\n  startRecording,\n  stopRecording,\n  render,\n  stopRender,\n} from '../../api/fetchRecording';\n\nimport { fixChrome687574, stopRenderAndRecording } from '../../utils';\n\nimport { useSignalling } from '../../hooks/useSignalling';\n\nimport { UserContext } from '../../context/UserContext';\n\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport { IconButton } from '@material-ui/core';\nimport styles from './styles';\nimport Tooltip from '@mui/material/Tooltip';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\n\nexport default function RecordingButton({ classes, session }) {\n  const { preferences, setPreferences } = useContext(UserContext);\n  let { roomName } = useParams();\n  const { archiveId } = useSignalling({ session });\n  const [isRecording, setRecording] = useState(false);\n  const [renderId, setRenderId] = useState(null);\n  const localClasses = styles();\n\n  const startRender = async (roomName) => {\n    if (isRecording) return;\n    try {\n      const renderData = await render(roomName);\n      if ((renderData.status = 200 && renderData.data)) {\n        const { id, sessionId } = renderData.data;\n        // console.log(renderData.data);\n        // setRenderId('12334');\n        preferences.renderId = id;\n        setRenderId(id);\n        setRecording(true);\n      } else return;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    console.log('run preferences hook');\n    if (\n      renderId !== preferences.renderId ||\n      archiveId !== preferences.archiveId\n    ) {\n      if (renderId) {\n        setPreferences({\n          ...preferences,\n          renderId: renderId,\n          archiveId: archiveId,\n        });\n      }\n    }\n  }, [renderId, setPreferences, archiveId, preferences]);\n\n  useEffect(() => {\n    if (preferences.recording !== isRecording) {\n      setPreferences({\n        ...preferences,\n        recording: isRecording,\n      });\n    }\n    // } else {\n    //   setPreferences({\n    //     ...preferences,\n    //     recording: false,\n    //   });\n    // }\n  }, [isRecording, preferences, setPreferences]);\n\n  const stopRenderAndRecording = async (renderId) => {\n    if (renderId) {\n      try {\n        const renderData = await stopRender(renderId);\n        console.log(renderData);\n        if ((renderData.status = 200)) {\n          handleRecordingStop(archiveId);\n          setRenderId(null);\n        } else return;\n      } catch (e) {\n        console.log(e);\n      }\n    } else return;\n  };\n\n  const handleRecordingStop = async (archiveId) => {\n    try {\n      if (isRecording) {\n        const data = await stopRecording(archiveId);\n        console.log(data);\n        if (data.status === 200 && data.data) {\n          const { status } = data.data;\n          setRecording(false);\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleRecordingAction = () => {\n    console.log('trying to start recording');\n    isRecording ? stopRenderAndRecording(renderId) : startRender(roomName);\n    // ? handleRecordingStop(archiveId)\n    // : handleRecordingStart(sessionId);\n  };\n\n  const title = isRecording ? 'Stop Recording' : 'Start Recording';\n\n  return (\n    <Tooltip title={title} aria-label=\"add\">\n      <IconButton\n        // edge=\"start\"\n        // color=\"inherit\"\n        // edge=\"start\"\n        aria-label=\"record\"\n        onClick={handleRecordingAction}\n        // size=\"small\"\n        className={classes.toolbarButtons}\n      >\n        {isRecording ? (\n          <FiberManualRecordIcon\n            fontSize=\"large\"\n            className={localClasses.activeRecordingIcon}\n            style={{ color: '#D50F2C' }}\n          />\n        ) : (\n          <FiberManualRecordIcon fontSize=\"large\" />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport { IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport default function EndCallIcon({ classes, handleEndCall }) {\n  return (\n    <Tooltip title=\"End call\" aria-label=\"add\">\n      <IconButton\n        edge=\"start\"\n        color=\"inherit\"\n        aria-label=\"videoCamera\"\n        className={classes.toolbarButtons}\n        style={{ backgroundColor: '#D50F2C' }}\n        onClick={handleEndCall}\n      >\n        <ExitToAppIcon fontSize=\"inherit\" />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles((theme) => ({\n  toolbarContainer: {\n    backgroundColor: theme.palette.toolbarBackground.main,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: '90px',\n    // margin: theme.spacing(2),\n    borderRadius: '18px',\n  },\n  paper: {\n    position: 'absolute',\n    display: 'flex',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  toolbarMobileContainer: {\n    backgroundColor: theme.palette.toolbarBackground.main,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: '60px',\n    margin: theme.spacing(2),\n    borderRadius: '25px',\n  },\n  toolbarButtons: {\n    margin: theme.spacing(1),\n    borderRadius: '5em',\n    backgroundColor: '#32353A',\n    color: '#fff',\n  },\n  arrowButton: {\n    borderRadius: '5em',\n    height: '50px',\n    width: '50px',\n    backgroundColor: '#32353A',\n    color: '#fff',\n  },\n  infoButton: {\n    position: 'absolute',\n    left: '0',\n    margin: theme.spacing(1),\n    borderRadius: '5em',\n    height: '50px',\n    width: '50px',\n    backgroundColor: '#32353A',\n    color: '#fff',\n  },\n  groupButton: {\n    margin: '8px',\n  },\n  disabledButton: {\n    backgroundColor: theme.palette.activeButtons.red,\n    '&:hover': {\n      backgroundColor: theme.palette.activeButtons.red,\n    },\n  },\n  activeButton: {\n    backgroundColor: theme.palette.activeButtons.green,\n    '&:hover': {\n      backgroundColor: theme.palette.activeButtons.green,\n    },\n  },\n  activeButtonIcon: {\n    color: theme.palette.activeButtons.green,\n  },\n}));\n","import React from 'react';\n\nimport MuteAudioButton from '../MuteAudioButton';\nimport MuteVideoButton from '../MuteVideoButton';\nimport RecordButton from '../RecordButton';\nimport EndCallButton from '../EndCallButton';\nimport { useSignalling } from '../../hooks/useSignalling';\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { usePublisher } from '../../hooks/usePublisher';\n\nimport styles from './styles';\n\nfunction ToolBar({\n  session,\n  handleVideoChange,\n  handleAudioChange,\n  hasVideo,\n  hasAudio,\n}) {\n  const classes = styles();\n  const { push } = useHistory();\n  const { roomName } = useParams();\n  const { renderedSesion } = useSignalling({ session });\n  const { destroyPublisher } = usePublisher();\n\n  const endCall = () => {\n    if (session) {\n      push(`/videorti/${roomName}/${renderedSesion}/end`);\n      // destroyPublisher();\n    }\n  };\n  return (\n    <div className=\"toolbar\">\n      <MuteAudioButton\n        classes={classes}\n        handleAudioChange={handleAudioChange}\n        hasAudio={hasAudio}\n      />\n      <MuteVideoButton\n        classes={classes}\n        handleVideoChange={handleVideoChange}\n        hasVideo={hasVideo}\n      />\n      <RecordButton classes={classes} session={session} />\n      <EndCallButton classes={classes} handleEndCall={endCall} />\n    </div>\n  );\n}\n\nexport default ToolBar;\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles({\n    root: {\n        top: '0',\n        background: ({ wsStatus }) => {\n            if (wsStatus === 'disconnected') return '#f19c38';\n            if (wsStatus === 'reconnecting') return '#f19c38';\n            if (wsStatus === 'reconnected') return '#4caf50';\n        },\n        /* width: '100%', */\n        justifyContent: 'center',\n    },\n    info: {\n        top: '0',\n        background: '#418be9',\n        justifyContent: 'center',\n    },\n    action: {\n        position: 'absolute',\n        right: '0',\n        paddingRight: '10px',\n    },\n    networkStatusIcons: {\n        paddingRight: '10px',\n    },\n    snackBarContent: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        fontSize: '14px'\n    },\n});\n","import { useEffect, useRef, useState, useCallback, useContext } from 'react';\nimport { useParams } from 'react-router';\n\nimport Banner from '../Banner';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Collapse from '@mui/material/Collapse';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport MedicalInformationIcon from '@mui/icons-material/MedicalInformation';\nimport VaccinesIcon from '@mui/icons-material/Vaccines';\nimport MedicationIcon from '@mui/icons-material/Medication';\nimport BloodtypeIcon from '@mui/icons-material/Bloodtype';\nimport Typography from '@mui/material/Typography';\nimport ContactPageIcon from '@mui/icons-material/ContactPage';\nimport MonitorHeart from '@mui/icons-material/MonitorHeart';\n\nfunction EntitiesList({ listOfEntities, entity }) {\n  const getIcon = (entity) => {\n    switch (entity) {\n      case 'Medical Condition':\n        return <MedicalInformationIcon />;\n      case 'Medication':\n        return <MedicationIcon />;\n      case 'Anatomy':\n        return <BloodtypeIcon />;\n      case 'Treatments':\n        return <VaccinesIcon />;\n      case 'PII':\n        return <ContactPageIcon />;\n      case 'Test Treatment Procedures':\n        return <MonitorHeart />;\n      default:\n        return;\n    }\n  };\n\n  const getBgColor = (entity) => {\n    switch (entity) {\n      case 'Medical Condition':\n        return '#5cceff';\n      case 'Medication':\n        return '#f0e442';\n      case 'Anatomy':\n        return '#d185af';\n      case 'Treatments':\n        return '#4a9';\n      case 'PII':\n        return '#999';\n      case 'Test Treatment Procedures':\n        return '#4a9';\n      default:\n        return;\n    }\n  };\n  return (<>\n    <List>\n      <ListItem key={entity} disablePadding>\n        <ListItemIcon>{getIcon(entity)}</ListItemIcon>\n        \n        <Typography\n        style={{ background: getBgColor(entity), padding: '0px' }}\n            variant=\"div\"\n            component=\"div\"\n            gutterBottom\n          >\n            {entity}\n          </Typography>\n        </ListItem>\n    </List>\n    <List sx={{\n      pl:2,\n      display: \"flex\",\n      flexDirection: \"column\",\n      maxHeight: 100,\n      overflow: \"hidden\",\n      overflowY: \"scroll\",\n      bgcolor: 'background.paper'\n    }}>\n      {listOfEntities\n        ? listOfEntities.map((e, i) => <div key={`${e.Text}-${i}`} >\n          <ListItem disablePadding>\n            <ListItemText primary={e.Text} />\n          </ListItem>\n          <Collapse in={true} timeout=\"auto\" unmountOnExit sx={{pl:2}}>\n          <List component=\"div\" disablePadding>\n          {e.concepts && e.concepts.length > 0?\n            <Select value='0' size=\"small\">\n              {e.concepts.map((_e, _i) => \n                <MenuItem key={`item-${i}-${_i}`} value={_i} >\n                  {`${_e.Code} | ${_e.Description} | ${ Math.floor(_e.Score * 10000)/100 }%`}\n                </MenuItem>\n                )}\n            </Select>\n            : ''}\n            </List>\n            </Collapse>\n        </div>)\n        : ''}\n    </List>\n  </>);\n}\n\nexport default EntitiesList;\n","import { useEffect, useRef, useState, useCallback, useContext } from 'react';\nimport { useParams } from 'react-router';\n\nimport { usePublisher } from '../../hooks/usePublisher';\nimport { useSession } from '../../hooks/useSession';\nimport { stopRender, stopRecording } from '../../api/fetchRecording';\nimport ToolBar from '../ToolBar';\nimport { getCredentials } from '../../api/fetchCreds';\nimport { UserContext } from '../../context/UserContext';\nimport { useSignalling } from '../../hooks/useSignalling';\n\nimport EntitiesList from '../EntitiesList';\n\nfunction Main() {\n  let translationPlaying = useRef(false);\n  let timePlayingLeft = useRef(0);\n  // const [timePlayingLeft, setTime] = useState(0);\n  const videoContainer = useRef();\n  let { roomName } = useParams();\n  const { preferences } = useContext(UserContext);\n  const [captions, setCaptions] = useState({text: 'Say something...', speaker: ''});\n\n  const [credentials, setCredentials] = useState(null);\n  const [error, setError] = useState(null);\n  const [hasAudio, setHasAudio] = useState(true);\n  const [hasVideo, setHasVideo] = useState(true);\n  const [userId, setUserId] = useState(null);\n  // const [translationPlaying, setTranslationPlaying] = useState(false);\n\n  const { session, createSession, connected, status } = useSession({\n    container: videoContainer,\n  });\n  // const medicalConditions = ['heart failure', 'type 2 diabetes', 'lung cancer'];\n  const {\n    messages,\n    sendMessage,\n    medication,\n    medicalConditions,\n    piiEntities,\n    anatomyEntities,\n    ttpEntities,\n  } = useSignalling({\n    session: session.current,\n  });\n\n  const {\n    publisher,\n    publish,\n    pubInitialised,\n    isPublishing,\n    publisherError,\n    destroyPublisher,\n  } = usePublisher();\n\n  useEffect(() => {\n    setCaptions(messages);\n  }, [messages]);\n\n  useEffect(() => {\n    getCredentials(roomName)\n      .then(({ data }) => {\n        console.log('Credential data: ', data);\n        setCredentials({\n          apiKey: data.apiKey,\n          sessionId: data.sessionId,\n          token: data.token,\n        });\n        setUserId(data.userId);\n      })\n      .catch((err) => {\n        setError(err);\n        console.log(err);\n      });\n  }, [roomName]);\n\n  useEffect(() => {\n    if (credentials) {\n      const { apiKey, sessionId, token } = credentials;\n      console.log(apiKey);\n      createSession({ apiKey, sessionId, token });\n    }\n  }, [createSession, credentials]);\n\n  // useEffect(() => {\n  //   if (preferences.renderId && preferences.archiveId && preferences.recording)\n  //     return () => {\n  //       destroyPublisher();\n  //     };\n  // }, [\n  //   destroyPublisher,\n  //   preferences.archiveId,\n  //   preferences.recording,\n  //   preferences.renderId,\n  // ]);\n\n  const handleAudioChange = useCallback(() => {\n    if (hasAudio) {\n      publisher.publishAudio(false);\n      setHasAudio(false);\n    } else {\n      publisher.publishAudio(true);\n      setHasAudio(true);\n    }\n  }, [hasAudio, publisher]);\n\n  const handleVideoChange = useCallback(() => {\n    if (hasVideo) {\n      publisher.publishVideo(false);\n      setHasVideo(false);\n      try {\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      publisher.publishVideo(true);\n      setHasVideo(true);\n      try {\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [hasVideo, publisher]);\n\n  useEffect(() => {\n    if (\n      session.current &&\n      connected &&\n      !pubInitialised &&\n      videoContainer.current\n    ) {\n      // todo It might be better to change state of this component.\n      publish({\n        session: session.current,\n        containerId: videoContainer.current.id,\n      });\n    }\n  }, [publish, session, connected, pubInitialised]);\n\n  return (\n    <>\n      <div className=\"videoContainer\">\n        <div\n          className={'video'}\n          ref={videoContainer}\n          id=\"video-container\"\n        ></div>\n        <div className=\"medicalAnalysis\" sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            maxHeight: 820,\n            overflow: \"hidden\",\n            overflowY: \"scroll\"\n        }}>\n          <div className=\"entityType\">\n            <EntitiesList\n              listOfEntities={medicalConditions}\n              entity={'Medical Condition'}\n            />\n          </div>\n          <div className=\"entityType\">\n            <EntitiesList listOfEntities={medication} entity={'Medication'} />\n          </div>\n          <div className=\"entityType\">\n            <EntitiesList listOfEntities={anatomyEntities} entity={'Anatomy'} />\n          </div>\n          <div className=\"entityType\">\n            <EntitiesList listOfEntities={piiEntities} entity={'PII'} />\n          </div>\n          <div className=\"entityType\">\n            <EntitiesList listOfEntities={ttpEntities} entity={'Test Treatment Procedures'} />\n          </div>\n        </div>\n      </div>\n      <div className=\"original\">{captions? `${captions.speaker}: ${captions.text}` : ''}</div>\n      <ToolBar\n        handleAudioChange={handleAudioChange}\n        handleVideoChange={handleVideoChange}\n        session={session.current}\n        hasAudio={hasAudio}\n        hasVideo={hasVideo}\n      />\n    </>\n  );\n}\n\nexport default Main;\n","import { makeStyles } from '@material-ui/core/styles';\n// export default makeStyles((theme)=>{\nexport default makeStyles({\n  flex: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    justifyContent: 'flex-start',\n    alignContent: 'stretch',\n    alignItems: 'flex-start',\n  },\n});\n","import Main from '../Main';\nimport styles from './styles.js';\nimport React from 'react';\n\nfunction Wrapper() {\n  const classes = styles();\n  return (\n    <div className={classes.flex}>\n      <Main />\n    </div>\n  );\n}\n\nexport default Wrapper;\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles((theme) => ({\n  banner: {\n    zIndex: 1,\n    // flexGrow: 0.1,\n    margin: '200px',\n    height: '100px',\n    width: '50%',\n    // position: 'absolute'\n    alignItems: 'center',\n    borderRadius: '30px',\n    backgroundColor: 'black',\n  },\n  container: {\n    ['@media (min-width:768px)']: {\n      marginTop: 10,\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'center',\n  },\n  new__meeting: {\n    color: 'rgb(43,158,250)',\n  },\n\n  meetingInfo: {\n    margin: '100px',\n    width: '50%',\n    height: '100px',\n    color: 'white',\n  },\n  recording: {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: '5px',\n    padding: '5px',\n  },\n  root: {\n    minWidth: 275,\n    margin: 'auto',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  centeredFlex: {\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: 'black',\n    color: 'white',\n    borderRadius: '30px',\n  },\n}));\n","import { useEffect, useState } from 'react';\nimport { fetchRecordings } from '../../api/fetchRecording';\nimport { useParams } from 'react-router';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nimport { IconButton } from '@material-ui/core';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { useHistory } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nimport styles from './styles';\n\nexport default function EndCall() {\n  const { push } = useHistory();\n  const [recordings, setRecordings] = useState(null);\n  const classes = styles();\n  const { sessionId } = useParams();\n\n  const redirectNewMeeting = () => {\n    push('/');\n  };\n  useEffect(() => {\n    fetchRecordings(sessionId)\n      .then((data) => {\n        if (data.data) {\n          setRecordings(data.data);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [sessionId]);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.meetingInfo}>\n        <h2 style={{ color: 'white' }}>We hope you enjoyed your meeting</h2>\n        <h2 style={{ color: 'white' }}>This was powered by Vonage</h2>\n\n        <IconButton\n          onClick={redirectNewMeeting}\n          className={classes.new__meeting}\n        >\n          Start new meeting\n        </IconButton>\n      </div>\n      <div className={classes.banner}>\n        <Card className={classes.centeredFlex} variant=\"outlined\">\n          <CardContent>\n            {recordings && recordings.length ? (\n              <h3 style={{ color: 'white' }}>Recordings</h3>\n            ) : (\n              <h3>There are no recordings</h3>\n            )}\n          </CardContent>\n          <CardActions>\n            <div className={classes.root}>\n              {recordings ? (\n                <div className={classes.recording}>\n                  <ul>\n                    {recordings.map((recording) => (\n                      <li key={recording.id}>\n                        Started at: {Date(recording.createdAt)}\n                        {recording.status === 'available' ? (\n                          <Button\n                            color=\"inherit\"\n                            edge=\"start\"\n                            target=\"_blank\"\n                            href={recording.url}\n                          >\n                            <GetAppIcon />\n                          </Button>\n                        ) : null}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ) : null}\n            </div>\n          </CardActions>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { UserContext } from '../../context/UserContext';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  const { preferences } = useContext(UserContext);\n  const roomName = rest?.computedMatch?.params?.roomName;\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !roomName ? (\n          <Redirect\n            to={{\n              pathname: '/',\n              //   state: { room: roomName },\n            }}\n          />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles((theme) => ({\n  header: {\n    flex: '0.5 1 auto',\n    alignSelf: 'stretch',\n    margin: 'auto',\n    padding: '15px 30px',\n    display: 'flex',\n    background: 'linear-gradient(to right, #8728fb, #fea18c) !important',\n    color: '#fff',\n    width: '100%',\n    alignItems: 'center',\n  },\n}));\n","import { makeStyles } from '@material-ui/core/styles';\n// export default makeStyles((theme)=>{\nexport default makeStyles({\n  flex: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'nowrap',\n    justifyContent: 'flex-start',\n    alignContent: 'stretch',\n    alignItems: 'flex-start',\n  },\n});\n","import Main from '../Main';\nimport Header from '../Header';\nimport styles from './styles.js';\nimport React from 'react';\n\nimport { useEffect, useRef, useState, useCallback, useContext } from 'react';\nimport { useParams } from 'react-router';\n\nimport { usePublisher } from '../../hooks/usePublisher';\nimport { useSession } from '../../hooks/useSession';\n\nimport ToolBar from '../ToolBar';\nimport { getVirtualViewerCredentials } from '../../api/fetchCreds';\nimport { UserContext } from '../../context/UserContext';\nimport { useSignalling } from '../../hooks/useSignalling';\n\nfunction VirtualView() {\n  let translationPlaying = useRef(false);\n  const [userId, setUserId] = useState(null);\n  const [credentials, setCredentials] = useState(null);\n  let timePlayingLeft = useRef(0);\n  // const [timePlayingLeft, setTime] = useState(0);\n  const videoContainer = useRef();\n  let { roomName } = useParams();\n  const { preferences } = useContext(UserContext);\n\n  const ws = useRef(null);\n  const ctx = useRef(null);\n  const gainNodeRef = useRef(null);\n  const context = useRef(null);\n\n  const [captions, setCaptions] = useState('Say something...');\n  const [originalCaptions, setOriginalCaptions] = useState('');\n  const { session, createSession, connected, streams } = useSession({\n    container: videoContainer,\n  });\n  const { messages, sendMessage } = useSignalling({\n    session: session.current,\n  });\n\n  const isVirtualView = () => {\n    if (session) return session.connection.data === 'virtual';\n    else return;\n  };\n\n  useEffect(() => {\n    getVirtualViewerCredentials(roomName)\n      .then(({ data }) => {\n        setCredentials({\n          apiKey: data.apiKey,\n          sessionId: data.sessionId,\n          token: data.token,\n        });\n        setUserId(data.userId);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [roomName]);\n\n  useEffect(() => {\n    if (credentials) {\n      const { apiKey, sessionId, token } = credentials;\n      console.log(apiKey);\n      createSession({ apiKey, sessionId, token });\n    }\n  }, [createSession, credentials]);\n\n  const wait = (ms) => new Promise((r) => setTimeout(r, ms));\n\n  const handleAudioData = useCallback((decodedData) => {\n    console.log(\n      translationPlaying ? 'theres something playing' : 'free to play'\n    );\n\n    if (translationPlaying.current) {\n      console.log('waiting ' + timePlayingLeft.current + ' seconds');\n      wait(timePlayingLeft.current * 1000).then(() => {\n        const source = ctx.current.createBufferSource();\n        source.buffer = decodedData;\n        source.connect(ctx.current.destination);\n        source.start();\n        // setTranslationPlaying(true);\n        translationPlaying.current = true;\n        source.onended = () => {\n          console.log('Finished playing');\n          translationPlaying.current = false;\n          //setTranslationPlaying(false);\n        };\n      });\n    } else {\n      const source = ctx.current.createBufferSource();\n      source.buffer = decodedData;\n      timePlayingLeft.current = decodedData.duration;\n      // setTime(decodedData.duration);\n      source.connect(ctx.current.destination);\n      source.start();\n      console.log(source);\n      translationPlaying.current = true;\n      //setTranslationPlaying(true);\n      source.onended = () => {\n        console.log('Finished playing');\n        //setTranslationPlaying(false);\n        translationPlaying.current = false;\n      };\n    }\n    // });\n  }, []);\n\n  const startListeners = useCallback(() => {\n    if (ws.current) {\n      context.current = new AudioContext();\n      ws.current.onmessage = (event) => {\n        if (typeof event.data === 'string') {\n          let info = JSON.parse(event.data);\n          const streamId = info.id;\n          if (translationPlaying.current) {\n            wait(timePlayingLeft.current * 1000).then(() => {\n              console.log('waiting');\n              // if (doesWantOriginalCaptions(streamId)) {\n              setOriginalCaptions(`Original : ${info.original}`);\n              // }\n              setCaptions(`Translated: ${info.translated}`);\n              // sendMessage(info.translated);\n            });\n          } else {\n            // if (doesWantOriginalCaptions(streamId)) {\n            setOriginalCaptions(`Original : ${info.original}`);\n            // }\n            setCaptions(`Translated: ${info.translated}`);\n          }\n        } else {\n          const timestamp = new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n          }).format(Date.now());\n          console.log('Received audio at ' + timestamp);\n          // sendMessage(event.data);\n\n          context.current\n            .decodeAudioData(event.data)\n            .then(function (decodedData) {\n              handleAudioData(decodedData);\n            });\n        }\n      };\n      // Fired when the WebSocket closes unexpectedly due to an error or lost connetion\n      ws.current.onerror = (err) => {\n        console.error(err);\n      };\n      // Fired when the WebSocket connection has been closed\n      ws.current.onclose = (event) => {\n        console.info('Connection to websocket closed');\n        console.log(event);\n      };\n      ws.current.onopen = (event) => {\n        console.log('Connected');\n\n        // ws.current.send(\n        //   `{\"from\":\"${preferences.defaultSettings.originLanguage}\", \"to\":\"${preferences.defaultSettings.destinationLanguage}\", \"room\":\"${roomName}\",\"user\":\"${preferences.streamId}\", \"digitalHuman\":\"${preferences.digitalHuman}\"}`\n        // );\n      };\n    }\n  }, []);\n\n  useEffect(() => {\n    let AudioContext = window.AudioContext;\n    ctx.current = new AudioContext();\n    let wsUrl = `ws:localhost:5000/virtualviewers/${roomName}`;\n\n    if (process.env.NODE_ENV === 'production') {\n      wsUrl = `${process.env.REACT_APP_WS_URL_PRODUCTION}/virtualviewers/${roomName}`;\n    } else if (process.env.REACT_APP_SERVER_PORT) {\n      wsUrl = `ws:localhost:${process.env.REACT_APP_SERVER_PORT}/virtualviewers/${roomName}`;\n    }\n    wsUrl = wsUrl + encodeURI('?userid=virtualviewer' + '&room=' + roomName);\n    console.log('main WS: ' + wsUrl);\n\n    ws.current = new WebSocket(wsUrl);\n    ws.current.binaryType = 'arraybuffer';\n    startListeners();\n  }, [startListeners, roomName, preferences.streamId]);\n\n  const classes = styles();\n  return (\n    <div className={classes.flex}>\n      <Header />\n      <div className=\"videoContainer\">\n        <div\n          className={'video'}\n          ref={videoContainer}\n          id=\"video-container\"\n        ></div>\n      </div>\n      <div className=\"original\"> {originalCaptions}</div>\n      <div className=\"original\"> {captions}</div>\n    </div>\n  );\n}\n\nexport default VirtualView;\n","import logo from './logo.svg';\nimport './App.css';\nimport WaitingRoom from './components/WaitingRoom';\nimport Wrapper from './components/Wrapper';\nimport EndCall from './components/EndCall';\n\nimport { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { UserContext } from './context/UserContext';\nimport { useMemo, useState } from 'react';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport VirtualView from './components/VirtualView';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nlet primary = process.env.REACT_APP_PALETTE_PRIMARY || '#b779ff';\nlet secondary = process.env.REACT_APP_PALETTE_SECONDARY || '#d6219c';\n\nconst theme = () => {\n  return createTheme({\n    palette: {\n      type: 'light',\n      primary: {\n        main: primary,\n      },\n      secondary: {\n        main: secondary,\n      },\n      bodyBackground: {\n        black: '#131415',\n      },\n      callBackground: {\n        main: '#20262D',\n      },\n      toolbarBackground: {\n        main: '#41464D',\n      },\n      activeButtons: {\n        green: '#1C8731',\n        red: '#D50F2C',\n      },\n    },\n  });\n};\n\nfunction App() {\n  const [preferences, setPreferences] = useState({\n    name: null,\n    defaultSettings: {\n\n    },\n  });\n  const preferencesValue = useMemo(\n    () => ({ preferences, setPreferences }),\n    [preferences, setPreferences]\n  );\n  return (\n    <ThemeProvider theme={theme()}>\n      <Router>\n        <UserContext.Provider value={preferencesValue}>\n          <Switch>\n            <ProtectedRoute exact path=\"/room/:roomName\" component={Wrapper} />\n            <Route exact path=\"/room/:roomName/:sessionId/end\">\n              <EndCall />\n            </Route>\n            {/* <Route path=\"/videorti/virtualviewer/:roomName\">\n              <VirtualView />\n            </Route> */}\n            {/* <Route path=\"/videorti/recorder/:roomName\">\n              <VirtualView />\n            </Route> */}\n            <Route path=\"/\">\n              <WaitingRoom />\n            </Route>\n            <Route path=\"*\">\n              <Redirect\n                to={{\n                  pathname: '/',\n                }}\n              />\n            </Route>\n          </Switch>\n        </UserContext.Provider>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}